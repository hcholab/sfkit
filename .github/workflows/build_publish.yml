# This workflow builds, lints, tests and pushes the Docker image into the GitHub Container Registry,
# and publishes a release with a corresponding distributable package.
name: Build and Publish

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_lint_test_push:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    env:
      REGISTRY: ghcr.io
      IMAGE: ${{ github.repository }}
      ARCHIVE: "sfkit_linux_x86_64.tar.gz"
      RELEASE: ${{ github.ref == 'refs/heads/main' && github.event_name != 'pull_request' }}

    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE }}
        tags: |
          type=raw,value=latest

    - name: Build, lint, test and push Docker image
      id: docker_build
      uses: docker/build-push-action@v4
      with:
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: MARCH=x86-64
        load: true

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      if: ${{ env.RELEASE == 'true' }}
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push Docker image
      if: ${{ env.RELEASE == 'true' }}
      run: docker push ${{ steps.meta.outputs.tags }}

    - name: Extract Docker image into archive
      run: |
        docker create --name sfkit "${{ steps.docker_build.outputs.digest }}"
        docker export sfkit | tar -xvf - app/
        tar czvf ${ARCHIVE} --transform 's/^app/sfkit/' app/

    - name: Publish release archive
      uses: softprops/action-gh-release@v1
      if: ${{ env.RELEASE == 'true' }}
      with:
        files: ${{ env.ARCHIVE }}
